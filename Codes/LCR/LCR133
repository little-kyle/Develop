//计算获得n的二进制表示中1的个数；
class Solution {
public:
    int hammingWeight(uint32_t n) {
        int ans=0;
        for(int i=0;i<32;i++){
            if(n&1<<i)ans++;
        }
        return ans;
    }
};


//111010 & 111001=111000；
//111000 & 110111=110000；
//110000 & 101111=100000；
//100000 & 011111=000000；
class Solution{
public:
    int hammingWeight(uint32_t n) {
        int ret=0;
        while(n){
            n&=n-1;   
            ret++;
        }
        return ret;
    }

};

