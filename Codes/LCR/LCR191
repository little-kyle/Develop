//按照规则计算统计结果

//注意这里可能有的种群是0；
class Solution {
public:
    vector<int> statisticalResult(vector<int>& arrayA) {
        int length=arrayA.size();
        int dot=1;
        vector<int> arrayB;
        for(int i=0;i<length;i++){
            dot*=arrayA[i];
        }
        for(int i=0;i<length;i++){
            arrayB.push_back(dot/arrayA[i]);
        }
        return arrayB;
    }
};
//上述没有考虑有的元素为0的情况；所以不能使用除法进行求解，只能使用乘法：


class Solution {
public:
    vector<int> statisticalResult(vector<int>& arrayA) {
        int len=arrayA.size();
        if(len==0)return {};
        vector<int> arrayB(len,1);
        arrayB[0]=1;
        int tmp=1;
        for(int i=1;i<len;i++){
            arrayB[i]=arrayB[i-1]*arrayA[i-1];
        }
        for(int i=len-2;i>=0;i--){
            tmp*=arrayA[i+1];
            arrayB[i]*=tmp;
        }
        return arrayB;
    }
};
//时间复杂度：O(N),N是数组的长度，两次遍历数组都是O(N)的时间；
//空间复杂度：O(1);
