//螺旋矩阵Ⅰ

class Solution {
public:
    vector<int> spiralOrder(vector<vector<int>>& matrix) {
        vector<int> res;
        int height=matrix.size();
        int width=matrix[0].size();
        int t=0; //top;
        int b=height-1; //bottom;
        int l=0; //left;
        int r=width-1; //right;
        int k=0;
        while(k<height*width){
            for(int i=l;i<=r;++i){
                res.push_back(matrix[t][i]);
                k++;
            }
            ++t;
            for(int i=t;i<=b;++i){
                res.push_back(matrix[i][r]);
                k++;
            }
            --r;
            for(int i=r;i>=l;--i){
                res.push_back(matrix[b][i]);
                k++;
            }
            --b;
            for(int i=b;i>=t;--i){
                res.push_back(matrix[i][l]);
                k++;
            }
            ++l;
        }
        return res;
    }
};

//上述自己写的代码会出现终止条件不对的情况；
class Solution {
public:
    vector<int> spiralOrder(vector<vector<int>>& matrix) {
        vector<int> res;
        int height=matrix.size();
        int width=matrix[0].size();
        int t=0; //top;
        int b=height-1; //bottom;
        int l=0; //left;
        int r=width-1; //right;
        while(true){
            for(int i=l;i<=r;++i){
                res.push_back(matrix[t][i]);
            }
            ++t;
            if(t>b)break;
            for(int i=t;i<=b;++i){
                res.push_back(matrix[i][r]);
            }
            --r;
            if(r<l)break;
            for(int i=r;i>=l;--i){
                res.push_back(matrix[b][i]);
            }
            --b;
            if(b<t)break;
            for(int i=b;i>=t;--i){
                res.push_back(matrix[i][l]);
            }
            ++l;
            if(l>r)break;
        }
        return res;
    }
};