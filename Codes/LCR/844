//比较含退格的字符串

class Solution {
public:
    bool backspaceCompare(string s, string t) {
        return build(s)==build(t);
    }

    string build(string str){
        string ret;
        for(char ch:str){
            if(ch!='#'){
                ret.push_back(ch);
            }else if(!ret.empty()){
                ret.pop_back();
            }
        }
        return ret;
    }
};


//方法优化：
class Solution {
public:
    bool backspaceCompare(string s, string t) {
        int i=s.length()-1,j=t.length()-1;
        int skips=0,skipt=0;

        while(i>=0 || j>=0){
            //下面的while循环是要找到有效的字符，即处理过 # 之后的；
            while(i>=0){
                if(s[i]=='#'){
                    skips++;
                    i--;
                }else if(skips>0){
                    skips--;
                    i--;
                }else{
                    break;
                }
            }
            while(j>=0){
                if(t[j]=='#'){
                    skipt++;
                    j--;
                }else if(skipt>0){
                    skipt--;
                    j--;
                }else{
                    break;
                }
            }
            if(i>=0 && j>=0){
                if(s[i]!=t[j]){
                    return false;
                }
            }else{
                if(i>=0||j>=0){
                    return false;
                }
            }
            i--,j--;
        }
        return true;
    }
};
