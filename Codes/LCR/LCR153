//给你二叉树的根节点 root 和一个整数目标和 targetSum ，
//找出所有 从根节点到叶子节点 路径总和等于给定目标和的路径。

//叶子节点 是指没有子节点的节点。

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> pathTarget(TreeNode* root, int target) {
        if(!root)return {};
        
    }
};

//深度搜索，使用递归？

//思想：回溯法，先序遍历+路径记录；
class Solution {
public:
    vector<vector<int>> pathTarget(TreeNode* root, int target) {
        recur(root,target);
        return res;
    }
private:
    vector<vector<int>> res;
    vector<int> path;
    void recur(TreeNode* root, int target){
        if(root==nullptr)return nullptr;
        
        path.push_back(root->val);
        target-=root->val;
        if(target==0 && root->left==nullptr &&root->right==nullptr)
            res.push_back(path);
        recur(root->left,target);
        recur(root->right,target);
        path.pop_back();
    }
};
